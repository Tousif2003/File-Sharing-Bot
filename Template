  <!-- âœ… Font Awesome for icons -->
  <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.5.0/css/all.min.css">

  <!-- âœ… Plyr CSS -->
  <link rel="stylesheet" href="https://cdn.plyr.io/3.7.8/plyr.css">

  <style>
    body {
      background: #f7f9fc;
      font-family: sans-serif;
      margin: 0;
      padding: 20px;
      text-align: center;
    }
    #player {
      width: 90%;
      max-width: 800px;
      border-radius: 8px;
      border: 2px solid #0072ff;
      box-shadow: 0 4px 12px rgba(0,0,0,0.2);
    }
  </style>
</head>
<body>

  <!-- âœ… Single Player -->
  <video id="player" playsinline controls preload="metadata" controlsList="nodownload">
    <source src="{{ src }}" type="video/mp4">
    Your browser does not support HTML5 video.
  </video>

  <!-- âœ… Plyr JS -->
  <script src="https://cdn.plyr.io/3.7.8/plyr.polyfilled.js"></script>

  <script>
  document.addEventListener('DOMContentLoaded', () => {
    if (window.__playerInstance) {
      try { window.__playerInstance.destroy(); } catch(e){}
      window.__playerInstance = null;
    }

    const videoEl = document.getElementById('player');
    const player = new Plyr(videoEl, {
      controls: ['play-large','rewind','play','fast-forward','progress','current-time','duration'], // âœ… Only these buttons
    });
    window.__playerInstance = player;

    // ðŸŽ¨ Landscape Button
    function createLandscapeButton() {
      const btn = document.createElement('button');
      btn.className = 'plyr__control landscape-btn';
      btn.type = 'button';
      btn.innerHTML = `
        <div style="
          display:flex;
          flex-direction:column;
          align-items:center;
          justify-content:center;
        ">
          <i class="fas fa-expand" style="
            font-size:20px;
            background: linear-gradient(135deg, #00c6ff, #0072ff);
            -webkit-background-clip: text;
            -webkit-text-fill-color: transparent;
          "></i>
          <span style="
            font-size:11px;
            font-weight:bold;
            background: linear-gradient(135deg, #ff6a00, #ee0979);
            -webkit-background-clip: text;
            -webkit-text-fill-color: transparent;
          ">Landscape</span>
        </div>
      `;

      let isLandscape = false;
      btn.addEventListener('click', async () => {
        try {
          const label = btn.querySelector('span');
          const icon = btn.querySelector('i');
          if (!isLandscape) {
            if (player.fullscreen && !player.fullscreen.active) await player.fullscreen.enter();
            if (screen.orientation && screen.orientation.lock) await screen.orientation.lock('landscape');
            label.textContent = 'Portrait';
            label.style.background = 'linear-gradient(135deg, #00c6ff, #0072ff)';
            icon.style.background = 'linear-gradient(135deg, #ff6a00, #ee0979)';
            icon.style.webkitBackgroundClip = 'text';
            icon.style.webkitTextFillColor = 'transparent';
            isLandscape = true;
          } else {
            if (player.fullscreen && player.fullscreen.active) await player.fullscreen.exit();
            if (screen.orientation && screen.orientation.unlock) screen.orientation.unlock();
            label.textContent = 'Landscape';
            label.style.background = 'linear-gradient(135deg, #ff6a00, #ee0979)';
            icon.style.background = 'linear-gradient(135deg, #00c6ff, #0072ff)';
            icon.style.webkitBackgroundClip = 'text';
            icon.style.webkitTextFillColor = 'transparent';
            isLandscape = false;
          }
        } catch (e) {
          console.warn('Landscape toggle error:', e);
        }
      });
      return btn;
    }

    // âœ… Add landscape button safely
    const controls = player.elements?.controls;
    if (controls && !controls.querySelector('.landscape-btn')) {
      const lbtn = createLandscapeButton();
      controls.appendChild(lbtn);
    }

    // âœ… Mobile autoplay unlock
    function unlockAudioOnce() {
      try {
        const p = videoEl.play();
        if (p && typeof p.catch === 'function') p.catch(()=>{});
      } catch(e){}
      document.removeEventListener('click', unlockAudioOnce);
      document.removeEventListener('touchstart', unlockAudioOnce);
    }
    document.addEventListener('click', unlockAudioOnce, { passive:true, once:true });
    document.addEventListener('touchstart', unlockAudioOnce, { passive:true, once:true });
  });
  </script>

